{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julie\\\\Desktop\\\\M\\\\MERN-Stack\\\\frontend\\\\src\\\\components\\\\CreateNote.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nexport default class CreateNote extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      userSelected: '',\n      title: '',\n      content: '',\n      date: new Date(),\n      editing: false,\n      _id: ''\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault(); //Prever la pagina se reinicie al actualizarse.\n\n      const newNote = {\n        title: this.state.title,\n        content: this.state.content,\n        date: this.state.date,\n        author: this.state.userSelected\n      };\n\n      if (this.state.editing) {\n        await axios.put('http://localhost:4000/api/notes/' + this.state._id, newNote); //PUT para actualizar la nota\n      } else {\n        await axios.post('http://localhost:4000/api/notes', newNote); //POST para crear nueva nota\n      }\n\n      window.location.href = '/'; //Redireccionar a la pagina de notas luego de crear una nota\n    };\n\n    this.onInputChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onChangeDate = date => {\n      this.setState({\n        date\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const res = await axios.get('http://localhost:4000/api/users');\n    this.setState({\n      users: res.data.map(user => user.username),\n      userSelected: res.data[0].username\n    });\n\n    if (this.props.match.params.id) {\n      const res = await axios.get('http://localhost:4000/api/notes/' + this.props.match.params.id);\n      this.setState({\n        title: res.data.title,\n        content: res.data.content,\n        date: new Date(res.data.date),\n        userSelected: res.data.author,\n        editing: true,\n        _id: this.props.match.params.id\n      });\n    }\n  } //Metodo onSubmit del componente createnote\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 offset-md-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 20\n      }\n    }, \"Create a Note\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"form-control\",\n      name: \"userSelected\",\n      onChange: this.onInputChange,\n      value: this.state.userSelected,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, this.state.users.map(user => /*#__PURE__*/React.createElement(\"option\", {\n      key: user,\n      value: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 37\n      }\n    }, user)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Title\",\n      name: \"title\",\n      onChange: this.onInputChange,\n      value: this.data.title,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"content\",\n      className: \"form-control\",\n      placeholder: \"Content\",\n      onChange: this.onInputChange,\n      value: this.data.content,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      className: \"form-control\",\n      selected: this.state.date,\n      onChange: this.onChangeDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 24\n      }\n    }, \"Save\"))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/julie/Desktop/M/MERN-Stack/frontend/src/components/CreateNote.js"],"names":["React","Component","axios","DatePicker","CreateNote","state","users","userSelected","title","content","date","Date","editing","_id","onSubmit","e","preventDefault","newNote","author","put","post","window","location","href","onInputChange","setState","target","name","value","onChangeDate","componentDidMount","res","get","data","map","user","username","props","match","params","id","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nexport default class CreateNote extends Component {\r\n\r\n    state= {\r\n        users: [],\r\n        userSelected: '',\r\n        title: '',\r\n        content: '',\r\n        date: new Date(),\r\n        editing: false,\r\n        _id: ''\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        \r\n        const res = await axios.get('http://localhost:4000/api/users');\r\n        this.setState({\r\n            users: res.data.map(user => user.username),\r\n            userSelected: res.data[0].username\r\n        })\r\n        if(this.props.match.params.id)\r\n        {\r\n            const res = await axios.get('http://localhost:4000/api/notes/'+ this.props.match.params.id);\r\n            this.setState({\r\n                title: res.data.title,\r\n                content: res.data.content,\r\n                date: new Date(res.data.date),\r\n                userSelected: res.data.author,\r\n                editing: true,\r\n                _id: this.props.match.params.id\r\n            })\r\n        }\r\n    } \r\n    \r\n    //Metodo onSubmit del componente createnote\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();  //Prever la pagina se reinicie al actualizarse.\r\n\r\n        const newNote = {\r\n            title: this.state.title,\r\n            content: this.state.content,\r\n            date: this.state.date,\r\n            author: this.state.userSelected\r\n        };\r\n\r\n        if(this.state.editing)\r\n        {\r\n\r\n            await axios.put('http://localhost:4000/api/notes/' + this.state._id, newNote); //PUT para actualizar la nota\r\n        }else { \r\n            await axios.post('http://localhost:4000/api/notes', newNote); //POST para crear nueva nota\r\n        }\r\n\r\n        window.location.href = '/'; //Redireccionar a la pagina de notas luego de crear una nota\r\n\r\n\r\n    }\r\n    \r\n    onInputChange = e => {         \r\n        this.setState({\r\n          [e.target.name]: e.target.value \r\n        })\r\n    }\r\n\r\n    onChangeDate = date => \r\n    {\r\n       this.setState({date});    \r\n    }\r\n\r\n    render() {\r\n        return (\r\n           <div className=\"col-md-6 offset-md-3\">\r\n               <div className=\"card card-body\">\r\n                   <h4>Create a Note</h4>\r\n\r\n                    {/** SELECT USER */}\r\n                    <div className=\"form-group\">\r\n                            <select className=\"form-control\"\r\n                                    name=\"userSelected\"\r\n                                    onChange={this.onInputChange}\r\n                                    value={this.state.userSelected}\r\n                            >\r\n                                {\r\n\r\n                                    this.state.users.map(user => \r\n                                    <option key={user} value={user}>\r\n                                        {user}\r\n                                    </option>)\r\n                                }\r\n                            </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                            <input type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    placeholder=\"Title\" \r\n                                    name=\"title\"\r\n                                    onChange={this.onInputChange}\r\n                                    value={this.data.title}\r\n                                    required\r\n                                    />\r\n                    </div>\r\n\r\n                    \r\n                    <div className=\"form-group\">\r\n                        <textarea \r\n                           name=\"content\"\r\n                           className=\"form-control\"\r\n                           placeholder=\"Content\"\r\n                           onChange={this.onInputChange}\r\n                           value= {this.data.content} \r\n                           required>\r\n                        \r\n                           </textarea>\r\n                    </div>   \r\n\r\n                        <div className=\"form-group\">\r\n                            <DatePicker\r\n                            className=\"form-control\"\r\n                            selected={this.state.date}\r\n                            onChange={this.onChangeDate}\r\n\r\n                            />\r\n                            </div>     \r\n\r\n                   <form onSubmit={this.onSubmit}>\r\n                       \r\n                       <button type=\"submit\" className=\"btn btn-primary\">\r\n                           Save\r\n\r\n                       </button>\r\n                   </form>\r\n               </div>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}